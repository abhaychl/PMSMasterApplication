@model PMSMaster.Entity.Models.UserGrouping

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!---bredcrumb start-->
<div class="viewport-header">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb has-arrow">
            <li class="breadcrumb-item">
                <a href="#">Dashboard</a>
            </li>
            <li class="breadcrumb-item">
                <a href="#">Manage UserGrouping</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">Add UserGrouping</li>
        </ol>
    </nav>
</div>
<!--breadcrumb end-->
<!--Body Data-->
<div class="row">
    <div class="col-12 pt-1 pb-4 d-flex justify-content-between align-items-center"><h4>Add New UserGrouping</h4> <a href="@Url.Action("Index", "UserGrouping", new { area="Admin"})" class="btn btn-blue  w-80 h-35"> <button class="btn btn-blue  w-80 h-35" data-toggle="modal" data-target="#termcondition">View All UserGrouping</button> </a>
        </div>
</div>
<!--table row-->
<div class="row">
    <div class="col-lg-12">
        <div class="grid">
            <div class="d-flex justify-content-between align-items-center grid-header mb-0">
                <p class="card-title">Add New UserGrouping</p>
            </div>
            <div class="grid-body pb-4">
                <div class="item-wrapper">
                    @using (Html.BeginForm("Create", "UserGrouping", FormMethod.Post))
                    {
                        <div class="row">
                            <div class="form-group col-md-6 col-sm-6 col-xs-12">
                                <label for="inputEmail1">Select Role</label>

                                @Html.DropDownListFor(x => x.RoleId, new SelectList(ViewBag.AllRoles, "RoleId", "Name"), "Select Role", new { @class = "form-control", onchange = "OnRoleChange()"})
                                <span class="YError">@Html.ValidationMessageFor(x => x.RoleId)</span>
                            </div>

                            <div class="form-group col-md-6 col-sm-6 col-xs-12">
                                <label for="inputEmail1">Select User</label>

                                @Html.DropDownListFor(x => x.UserId, new SelectList(ViewBag.AllUsers, "UserId", "Name"), "Select User", new { @class = "form-control" , onchange = "OnUserChange()"})
                                <span class="YError">@Html.ValidationMessageFor(x => x.UserId)</span>
                            </div>
                        </div>

                        <div class="row">

                            <div class="form-group col-md-12 col-sm-12 col-xs-12">
                                <label for="inputEmail1">Add Users/Managers</label>
                                @Html.DropDownListFor(x => x.UserGroupingUsers, new SelectList(ViewBag.AllUsersWithoutGroup, "UserId", "Name"), "", new { @class = "form-control selectmultiple", @Id = "aMasterId", @Name = "aMasterId", multiple = "multiple" })

                                <span class="YError">@Html.ValidationMessageFor(x => x.UserGroupingUsers)</span>
                            </div>
                        </div>
                        
                        <div class="row">

                            <div class="form-group col-md-12 col-sm-12 col-xs-12">
                                <label for="inputEmail1">Active</label>
                                <div class="form-inline">
                                    @Html.CheckBoxFor(x => x.Status, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-sm btn-primary">ADD NEW UserGrouping</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!---Body Data end-->
@section scripts
    {
    <script type="text/javascript">

        function OnRoleChange(callback) {
            var Data1 = "<option value=''>Select User</option>";
            var clientID = $('#RoleId').val();
            $('#UserId').val("");

            $.ajax({
                type: "GET",
                async: false,
                url: "@Url.Action("GetUsersByRoleID", "UserGrouping", new { area = "Admin" })",
                data: { Id: clientID }, // Change data format for a GET request
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (resp) {
                    $.each(resp, function (key, value) {
                        Data1 += "<option value='" + value.userId + "'>" + value.name + "</option>";
                    });
                    $('#UserId').html(Data1);
                    if (callback && typeof callback === 'function') {
                        callback();
                    }
                },
                error: function (resp) {
                    alert('something went wrong !');
                }
            });
        };

        function OnUserChange(callback) {
            var Data1 = "<option value=''>Select User</option>";
            var clientID = $('#UserId').val();
            $('#aMasterId').val("");

            $.ajax({
                type: "GET",
                async: false,
                url: "@Url.Action("GetUsersWithoutGroup", "UserGrouping", new { area = "Admin" })",
                data: { Id: clientID }, // Change data format for a GET request
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (resp) {
                    $.each(resp, function (key, value) {
                        Data1 += "<option value='" + value.userId + "'>" + value.name + "</option>";
                    });
                    $('#aMasterId').html(Data1);
                    if (callback && typeof callback === 'function') {
                        callback();
                    }
                },
                error: function (resp) {
                    alert('something went wrong !');
                }
            });
        };

        $(document).ready(function () {
            $('.selectmultiple').select2(); // Initialize select2

            // If 'Model.UserGroupingUsers' is defined and not null, set the selected values
            var selectedValues = [];
        @if (Model.UserGroupingUsers != null)
        {
            <text>
                    selectedValues = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.UserGroupingUsers.Select(x => x.UserId))); // Serialize the selected data to JavaScript array
            </text>
        }

                $('#aMasterId').val(selectedValues).trigger('change'); // Set selected values in the dropdown
        });

    </script>

}
